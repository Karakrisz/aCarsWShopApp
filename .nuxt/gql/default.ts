import type { GraphQLClient, RequestOptions } from 'graphql-request';
import { gql } from 'graphql-request';
export type Maybe<T> = T | null;
export type InputMaybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
type GraphQLClientRequestHeaders = RequestOptions['requestHeaders'];
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  Date: { input: any; output: any; }
  DateTime: { input: any; output: any; }
  Upload: { input: any; output: any; }
};

export enum ActionType {
  BuyXGetYFree = 'BuyXGetYFree',
  FixedAmount = 'FixedAmount',
  FixedAmountWholeCart = 'FixedAmountWholeCart',
  PercentageProductPrice = 'PercentageProductPrice'
}

export type AddItemToCartInput = {
  bundleOptionQuantity?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  bundleOptions?: InputMaybe<Array<BundledOptionsInput>>;
  isBuyNow?: InputMaybe<Scalars['Boolean']['input']>;
  links?: InputMaybe<Array<Scalars['Int']['input']>>;
  productId: Scalars['ID']['input'];
  qty?: InputMaybe<Array<GroupedProductInput>>;
  quantity: Scalars['Int']['input'];
  selectedConfigurableOption?: InputMaybe<Scalars['Int']['input']>;
  superAttribute?: InputMaybe<Array<ConfigurableProductInput>>;
};

export type AddressInput = {
  address: Array<InputMaybe<Scalars['String']['input']>>;
  city: Scalars['String']['input'];
  companyName?: InputMaybe<Scalars['String']['input']>;
  country: Scalars['String']['input'];
  defaultAddress?: InputMaybe<Scalars['Boolean']['input']>;
  email: Scalars['String']['input'];
  firstName: Scalars['String']['input'];
  lastName: Scalars['String']['input'];
  phone: Scalars['String']['input'];
  postcode: Scalars['String']['input'];
  state: Scalars['String']['input'];
  vatId?: InputMaybe<Scalars['String']['input']>;
};

export type ApplyCouponInput = {
  code: Scalars['String']['input'];
};

export type Attachments = {
  imageUrl: Scalars['String']['input'];
  uploadType: Scalars['String']['input'];
};

export enum AttributeGroupColumn {
  MAIN = 'MAIN',
  RIGHT_SIDE = 'RIGHT_SIDE'
}

export type AttributeTranslationInput = {
  code: Scalars['String']['input'];
  name: Scalars['String']['input'];
};

export enum AttributeType {
  BOOLEAN = 'BOOLEAN',
  CHECKBOX = 'CHECKBOX',
  DATE = 'DATE',
  DATETIME = 'DATETIME',
  FILE = 'FILE',
  IMAGE = 'IMAGE',
  MULTISELECT = 'MULTISELECT',
  PRICE = 'PRICE',
  SELECT = 'SELECT',
  TEXT = 'TEXT',
  TEXTAREA = 'TEXTAREA'
}

export type AutoGeneratedCouponInput = {
  codeFormat: CodeFormat;
  codeLength: Scalars['Int']['input'];
  codePrefix?: InputMaybe<Scalars['String']['input']>;
  codeSuffix?: InputMaybe<Scalars['String']['input']>;
  couponQty: Scalars['Int']['input'];
};

export type BundleOptionLocaleInput = {
  code: Scalars['String']['input'];
  label: Scalars['String']['input'];
};

export type BundleProductInput = {
  bundleOptionProductId?: InputMaybe<Scalars['ID']['input']>;
  isDefault?: InputMaybe<Scalars['Boolean']['input']>;
  productId: Scalars['ID']['input'];
  qty: Scalars['Int']['input'];
  sortOrder?: InputMaybe<Scalars['Int']['input']>;
};

export type BundledOptionsInput = {
  bundleOptionId: Scalars['Int']['input'];
  bundleOptionProductId?: InputMaybe<Array<Scalars['Int']['input']>>;
  qty?: InputMaybe<Scalars['Int']['input']>;
};

export type CatalogRuleConditionInput = {
  attribute: Scalars['String']['input'];
  attributeType: Scalars['String']['input'];
  operator: Scalars['String']['input'];
  value?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CheckoutAddressInput = {
  address: Array<InputMaybe<Scalars['String']['input']>>;
  city: Scalars['String']['input'];
  companyName?: InputMaybe<Scalars['String']['input']>;
  country: Scalars['String']['input'];
  defaultAddress?: InputMaybe<Scalars['Boolean']['input']>;
  email: Scalars['String']['input'];
  firstName: Scalars['String']['input'];
  lastName: Scalars['String']['input'];
  phone: Scalars['String']['input'];
  postcode: Scalars['String']['input'];
  saveAddress?: InputMaybe<Scalars['Boolean']['input']>;
  state: Scalars['String']['input'];
  useForShipping?: InputMaybe<Scalars['Boolean']['input']>;
};

export enum CodeFormat {
  ALPHABETICAL = 'ALPHABETICAL',
  ALPHANUMERIC = 'ALPHANUMERIC',
  NUMERIC = 'NUMERIC'
}

export type ConditionInput = {
  attribute: Scalars['String']['input'];
  attributeType: Scalars['String']['input'];
  operator: Scalars['String']['input'];
  value?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type ConfigurableProductInput = {
  attributeId: Scalars['Int']['input'];
  attributeOptionId: Scalars['Int']['input'];
};

export type CreateAttributeFamilyInput = {
  attributeGroups?: InputMaybe<Array<CreateAttributeGroupInput>>;
  code: Scalars['String']['input'];
  name: Scalars['String']['input'];
};

export type CreateAttributeGroupInput = {
  attributeFamilyId?: InputMaybe<Scalars['ID']['input']>;
  code: Scalars['String']['input'];
  column: AttributeGroupColumn;
  customAttributes?: InputMaybe<Array<InputMaybe<CustomerAttributeInput>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  name: Scalars['String']['input'];
  position: Scalars['Int']['input'];
};

export type CreateAttributeInput = {
  adminName: Scalars['String']['input'];
  code: Scalars['String']['input'];
  defaultValue?: InputMaybe<Scalars['String']['input']>;
  isComparable: Scalars['Boolean']['input'];
  isConfigurable: Scalars['Boolean']['input'];
  isFilterable?: InputMaybe<Scalars['Boolean']['input']>;
  isRequired: Scalars['Boolean']['input'];
  isUnique: Scalars['Boolean']['input'];
  isVisibleOnFront?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<Array<InputMaybe<OptionInput>>>;
  swatchType?: InputMaybe<Scalars['String']['input']>;
  translations?: InputMaybe<Array<InputMaybe<AttributeTranslationInput>>>;
  type: AttributeType;
  validation?: InputMaybe<Scalars['String']['input']>;
  valuePerChannel?: InputMaybe<Scalars['Boolean']['input']>;
  valuePerLocale?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CreateCampaignInput = {
  channelId?: InputMaybe<Scalars['Int']['input']>;
  customerGroupId?: InputMaybe<Scalars['Int']['input']>;
  emailTemplateId?: InputMaybe<Scalars['Int']['input']>;
  eventId?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
  subject?: InputMaybe<Scalars['String']['input']>;
};

export type CreateCartRuleInput = {
  actionType: ActionType;
  applyToShipping: Scalars['Boolean']['input'];
  channels?: InputMaybe<Array<Scalars['Int']['input']>>;
  conditionType: Scalars['Boolean']['input'];
  conditions?: InputMaybe<Array<InputMaybe<ConditionInput>>>;
  couponCode?: InputMaybe<Scalars['String']['input']>;
  couponType?: InputMaybe<Scalars['Int']['input']>;
  customerGroups?: InputMaybe<Array<Scalars['Int']['input']>>;
  description?: InputMaybe<Scalars['String']['input']>;
  discountAmount: Scalars['Float']['input'];
  discountQuantity: Scalars['Int']['input'];
  discountStep: Scalars['Int']['input'];
  endOtherRules: Scalars['Boolean']['input'];
  endsTill?: InputMaybe<Scalars['DateTime']['input']>;
  freeShipping: Scalars['Boolean']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  sortOrder: Scalars['Int']['input'];
  startsFrom?: InputMaybe<Scalars['DateTime']['input']>;
  status: Scalars['Boolean']['input'];
  usagePerCustomer: Scalars['Int']['input'];
  useAutoGeneration?: InputMaybe<Scalars['Boolean']['input']>;
  usesPerCoupon: Scalars['Int']['input'];
};

export type CreateCatalogRuleInput = {
  actionType: Scalars['String']['input'];
  channels?: InputMaybe<Array<Scalars['Int']['input']>>;
  conditionType?: InputMaybe<Scalars['Int']['input']>;
  conditions?: InputMaybe<Array<InputMaybe<CatalogRuleConditionInput>>>;
  customerGroups?: InputMaybe<Array<Scalars['Int']['input']>>;
  description?: InputMaybe<Scalars['String']['input']>;
  discountAmount: Scalars['Float']['input'];
  endOtherRules: Scalars['Boolean']['input'];
  endsTill?: InputMaybe<Scalars['DateTime']['input']>;
  name: Scalars['String']['input'];
  sortOrder?: InputMaybe<Scalars['Int']['input']>;
  startsFrom?: InputMaybe<Scalars['DateTime']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CreateCategoryInput = {
  attributes?: InputMaybe<Array<Scalars['String']['input']>>;
  bannerPath?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description: Scalars['String']['input'];
  displayMode: Scalars['String']['input'];
  locale: Scalars['String']['input'];
  logoPath?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  metaDescription: Scalars['String']['input'];
  metaKeywords: Scalars['String']['input'];
  metaTitle: Scalars['String']['input'];
  name: Scalars['String']['input'];
  parentId?: InputMaybe<Scalars['Int']['input']>;
  position: Scalars['Int']['input'];
  slug: Scalars['String']['input'];
  status: Scalars['Boolean']['input'];
};

export type CreateChannelInput = {
  allowedIps?: InputMaybe<Scalars['String']['input']>;
  baseCurrencyId: Scalars['Int']['input'];
  code: Scalars['String']['input'];
  currencies: Array<Scalars['String']['input']>;
  defaultLocaleId: Scalars['Int']['input'];
  description?: InputMaybe<Scalars['String']['input']>;
  favicon?: InputMaybe<Scalars['String']['input']>;
  hostname?: InputMaybe<Scalars['String']['input']>;
  inventorySources?: InputMaybe<Array<Scalars['String']['input']>>;
  isMaintenanceOn?: InputMaybe<Scalars['Boolean']['input']>;
  locales: Array<Scalars['String']['input']>;
  logo?: InputMaybe<Scalars['String']['input']>;
  maintenanceModeText?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  rootCategoryId: Scalars['Int']['input'];
  seoDescription: Scalars['String']['input'];
  seoKeywords: Scalars['String']['input'];
  seoTitle: Scalars['String']['input'];
  theme?: InputMaybe<Scalars['String']['input']>;
};

export type CreateCmsPageInput = {
  channels?: InputMaybe<Array<Scalars['Int']['input']>>;
  htmlContent?: InputMaybe<Scalars['String']['input']>;
  layout?: InputMaybe<Scalars['String']['input']>;
  metaDescription?: InputMaybe<Scalars['String']['input']>;
  metaKeywords?: InputMaybe<Scalars['String']['input']>;
  metaTitle?: InputMaybe<Scalars['String']['input']>;
  pageTitle: Scalars['String']['input'];
  urlKey: Scalars['String']['input'];
};

export type CreateCurrencyInput = {
  code: Scalars['String']['input'];
  currencyPosition?: InputMaybe<CurrencyPosition>;
  decimal?: InputMaybe<Scalars['Int']['input']>;
  decimalSeparator?: InputMaybe<Scalars['String']['input']>;
  groupSeparator?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  symbol?: InputMaybe<Scalars['String']['input']>;
};

export type CreateCustomerAddressInput = {
  address: Scalars['String']['input'];
  city: Scalars['String']['input'];
  companyName?: InputMaybe<Scalars['String']['input']>;
  country: Scalars['String']['input'];
  customerId: Scalars['Int']['input'];
  defaultAddress?: InputMaybe<Scalars['Boolean']['input']>;
  email: Scalars['String']['input'];
  firstName: Scalars['String']['input'];
  lastName: Scalars['String']['input'];
  phone: Scalars['String']['input'];
  postcode: Scalars['String']['input'];
  state: Scalars['String']['input'];
  vatId?: InputMaybe<Scalars['String']['input']>;
};

export type CreateCustomerGroupInput = {
  code: Scalars['String']['input'];
  name: Scalars['String']['input'];
};

export type CreateCustomerInput = {
  customerGroupId: Scalars['Int']['input'];
  dateOfBirth?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
  firstName: Scalars['String']['input'];
  gender: Gender;
  isSuspended?: InputMaybe<Scalars['Boolean']['input']>;
  lastName: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CreateCustomerNoteInput = {
  customerNotified?: InputMaybe<Scalars['Boolean']['input']>;
  note: Scalars['String']['input'];
};

export type CreateEmailTemplateInput = {
  content: Scalars['String']['input'];
  name: Scalars['String']['input'];
  status: Status;
};

export type CreateEventInput = {
  date?: InputMaybe<Scalars['String']['input']>;
  description: Scalars['String']['input'];
  name: Scalars['String']['input'];
};

export type CreateExchangeRateInput = {
  rate: Scalars['Float']['input'];
  targetCurrency: Scalars['Int']['input'];
};

export type CreateInvoiceInput = {
  canCreateTransaction: Scalars['Boolean']['input'];
  invoiceData: Array<InvoiceDataInput>;
  orderId: Scalars['Int']['input'];
};

export type CreateLocaleInput = {
  code: Scalars['String']['input'];
  direction: Direction;
  image?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
};

export type CreateProductInput = {
  attributeFamilyId: Scalars['ID']['input'];
  sku: Scalars['String']['input'];
  superAttributes?: InputMaybe<Array<InputMaybe<SuperAttributesInput>>>;
  type: Scalars['String']['input'];
};

export type CreatePushNotificationInput = {
  channels?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  content?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  locale?: InputMaybe<Scalars['String']['input']>;
  productCategoryId?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['Int']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type CreateRefundInput = {
  adjustmentFee: Scalars['Int']['input'];
  adjustmentRefund: Scalars['Int']['input'];
  orderId: Scalars['Int']['input'];
  refundData?: InputMaybe<Array<RefundDataInput>>;
  refundShipping: Scalars['Int']['input'];
};

export type CreateReviewInput = {
  attachments: Array<InputMaybe<Attachments>>;
  comment: Scalars['String']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  productId: Scalars['ID']['input'];
  rating: Scalars['Int']['input'];
  title: Scalars['String']['input'];
};

export type CreateRoleInput = {
  description: Scalars['String']['input'];
  name: Scalars['String']['input'];
  permissionType: PermissionType;
  permissions?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type CreateSearchTermInput = {
  channelID?: InputMaybe<Scalars['Int']['input']>;
  locale?: InputMaybe<Scalars['String']['input']>;
  redirectUrl?: InputMaybe<Scalars['String']['input']>;
  term: Scalars['String']['input'];
};

export type CreateShipmentInput = {
  carrierTitle: Scalars['String']['input'];
  inventorySourceId: Scalars['Int']['input'];
  orderId: Scalars['Int']['input'];
  shipmentData: Array<ShipmentDataInput>;
  trackNumber: Scalars['String']['input'];
};

export type CreateSiteMapInput = {
  fileName: Scalars['String']['input'];
  path: Scalars['String']['input'];
};

export type CreateThemeInput = {
  channelId: Scalars['ID']['input'];
  name: Scalars['String']['input'];
  sortOrder: Scalars['Int']['input'];
  themeCode?: InputMaybe<Scalars['String']['input']>;
  type: ThemeType;
};

export type CreateTransactionInput = {
  amount?: InputMaybe<Scalars['Float']['input']>;
  invoiceId?: InputMaybe<Scalars['Int']['input']>;
  paymentMethod?: InputMaybe<Scalars['String']['input']>;
};

export type CreateUserInput = {
  email: Scalars['String']['input'];
  image?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  password?: InputMaybe<Scalars['String']['input']>;
  passwordConfirmation?: InputMaybe<Scalars['String']['input']>;
  roleId: Scalars['Int']['input'];
  status?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CustomAttributeInput = {
  name: Scalars['String']['input'];
  value?: InputMaybe<Scalars['String']['input']>;
};

export type CustomScriptInput = {
  css: Scalars['String']['input'];
  javascript: Scalars['String']['input'];
};

export type CustomerAttributeInput = {
  id: Scalars['Int']['input'];
  position: Scalars['Int']['input'];
};

export type CustomerGroupPriceInput = {
  customerGroupId?: InputMaybe<Scalars['ID']['input']>;
  qty: Scalars['Int']['input'];
  value: Scalars['Float']['input'];
  valueType: Scalars['String']['input'];
};

export enum Direction {
  LTR = 'LTR',
  RTL = 'RTL'
}

export enum DownloadLinkStatusEnum {
  AVAILABLE = 'AVAILABLE',
  EXPIRED = 'EXPIRED',
  PENDING = 'PENDING'
}

export type DownloadableLocaleInput = {
  code: Scalars['String']['input'];
  title: Scalars['String']['input'];
};

export type FilterAllProductsInput = {
  key?: InputMaybe<Scalars['String']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};

export type FilterAttributeFamiliesInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type FilterAttributesInput = {
  adminName?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  isRequired?: InputMaybe<Scalars['Int']['input']>;
  isUnique?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  valuePerChannel?: InputMaybe<Scalars['Int']['input']>;
  valuePerLocale?: InputMaybe<Scalars['Int']['input']>;
};

export type FilterCampaignInput = {
  channelId?: InputMaybe<Scalars['Int']['input']>;
  customerGroupId?: InputMaybe<Scalars['Int']['input']>;
  emailTemplateId?: InputMaybe<Scalars['Int']['input']>;
  eventId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  subject?: InputMaybe<Scalars['String']['input']>;
};

export type FilterCartRulesInput = {
  couponCode?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  priority?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FilterCatalogRulesInput = {
  end?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  priority?: InputMaybe<Scalars['Int']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FilterCategoryListInput = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  position?: InputMaybe<Scalars['Int']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FilterChannelInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  hostname?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type FilterCmsPageInput = {
  id?: InputMaybe<Scalars['Int']['input']>;
  pageTitle?: InputMaybe<Scalars['String']['input']>;
  urlKey?: InputMaybe<Scalars['String']['input']>;
};

export type FilterCompareProductsInput = {
  id?: InputMaybe<Scalars['Int']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  productId?: InputMaybe<Scalars['Int']['input']>;
  productName?: InputMaybe<Scalars['String']['input']>;
};

export type FilterCoreConfigInput = {
  channelCode?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  localeCode?: InputMaybe<Scalars['String']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};

export type FilterCountryStateInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  countryId?: InputMaybe<Scalars['ID']['input']>;
  defaultName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

export type FilterCurrencyInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type FilterCustomerAddressInput = {
  address?: InputMaybe<Scalars['String']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  companyName?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  customerId?: InputMaybe<Scalars['Int']['input']>;
  defaultAddress?: InputMaybe<Scalars['Boolean']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  gender?: InputMaybe<Gender>;
  id?: InputMaybe<Scalars['Int']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  postcode?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  vatId?: InputMaybe<Scalars['String']['input']>;
};

export type FilterCustomerGroupInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type FilterCustomerInput = {
  dateOfBirth?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  gender?: InputMaybe<Gender>;
  groupName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FilterCustomerOrderInput = {
  baseGrandTotal?: InputMaybe<Scalars['Float']['input']>;
  baseSubTotal?: InputMaybe<Scalars['Float']['input']>;
  channelName?: InputMaybe<Scalars['String']['input']>;
  customerId?: InputMaybe<Scalars['ID']['input']>;
  grandTotal?: InputMaybe<Scalars['Float']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  incrementId?: InputMaybe<Scalars['Int']['input']>;
  orderDate?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  subTotal?: InputMaybe<Scalars['Float']['input']>;
};

export type FilterDownloadablePurchaseInput = {
  downloadBought?: InputMaybe<Scalars['Int']['input']>;
  downloadUsed?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderId?: InputMaybe<Scalars['Int']['input']>;
  orderItemId?: InputMaybe<Scalars['Int']['input']>;
  productName?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<DownloadLinkStatusEnum>;
};

export type FilterEmailTemplateInput = {
  id?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type FilterEventInput = {
  date?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type FilterExchangeRateInput = {
  currency?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  rate?: InputMaybe<Scalars['Float']['input']>;
  targetCurrency?: InputMaybe<Scalars['Int']['input']>;
};

export type FilterHomeCategoriesInput = {
  key?: InputMaybe<Scalars['String']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};

export type FilterInput = {
  key?: InputMaybe<Scalars['String']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};

export type FilterInventorySourceInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FilterInvoiceInput = {
  grandTotal?: InputMaybe<Scalars['Float']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  invoiceDate?: InputMaybe<Scalars['String']['input']>;
  orderId?: InputMaybe<Scalars['Int']['input']>;
};

export type FilterInvoiceItemInput = {
  id?: InputMaybe<Scalars['Int']['input']>;
  invoiceId: Scalars['Int']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  orderItemId?: InputMaybe<Scalars['Int']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  qty?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
};

export type FilterLocaleInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  direction?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type FilterNotificationInput = {
  id?: InputMaybe<Scalars['ID']['input']>;
  productCategoryId?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type FilterOrderInput = {
  baseGrandTotal?: InputMaybe<Scalars['Float']['input']>;
  baseSubTotal?: InputMaybe<Scalars['Float']['input']>;
  billedTo?: InputMaybe<Scalars['String']['input']>;
  channelName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  orderDate?: InputMaybe<Scalars['String']['input']>;
  shippedTo?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};

export type FilterOrderInvoiceInput = {
  amount?: InputMaybe<Scalars['Float']['input']>;
  customerName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  invoiceDate?: InputMaybe<Scalars['String']['input']>;
  orderId: Scalars['Int']['input'];
  status?: InputMaybe<Scalars['String']['input']>;
};

export type FilterOrderItemInput = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderId?: InputMaybe<Scalars['Int']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  qtyCanceled?: InputMaybe<Scalars['Float']['input']>;
  qtyInvoiced?: InputMaybe<Scalars['Float']['input']>;
  qtyOrdered?: InputMaybe<Scalars['Float']['input']>;
  qtyRefunded?: InputMaybe<Scalars['Float']['input']>;
  qtyShipped?: InputMaybe<Scalars['Float']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  totalWeight?: InputMaybe<Scalars['Float']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  weight?: InputMaybe<Scalars['Float']['input']>;
};

export type FilterOrderRefundInput = {
  customerName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  orderId: Scalars['Int']['input'];
  refundDate?: InputMaybe<Scalars['String']['input']>;
  refunded?: InputMaybe<Scalars['Float']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};

export type FilterOrderShipmentInput = {
  carrierTitle?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  orderId: Scalars['Int']['input'];
  shipmentDate?: InputMaybe<Scalars['String']['input']>;
  totalQty?: InputMaybe<Scalars['Int']['input']>;
  trackingNumber?: InputMaybe<Scalars['String']['input']>;
};

export type FilterProductsInput = {
  attributeFamily?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  parentId?: InputMaybe<Scalars['ID']['input']>;
  qty?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type FilterRefundInput = {
  baseGrandTotal?: InputMaybe<Scalars['Float']['input']>;
  billedTo?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  orderId?: InputMaybe<Scalars['Int']['input']>;
  refundDate?: InputMaybe<Scalars['String']['input']>;
  refunded?: InputMaybe<Scalars['Float']['input']>;
};

export type FilterRefundItemInput = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderItemId?: InputMaybe<Scalars['Int']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  qty?: InputMaybe<Scalars['Int']['input']>;
  refundId: Scalars['ID']['input'];
  sku?: InputMaybe<Scalars['String']['input']>;
};

export type FilterReviewInput = {
  customerName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  productId?: InputMaybe<Scalars['Int']['input']>;
  productName?: InputMaybe<Scalars['String']['input']>;
  rating?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type FilterRoleInput = {
  id?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  permissionType?: InputMaybe<Scalars['String']['input']>;
};

export type FilterSearchTermInput = {
  channelID?: InputMaybe<Scalars['ID']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  locale?: InputMaybe<Scalars['String']['input']>;
  results?: InputMaybe<Scalars['Int']['input']>;
  term?: InputMaybe<Scalars['String']['input']>;
  uses?: InputMaybe<Scalars['Int']['input']>;
};

export type FilterShipmentInput = {
  id?: InputMaybe<Scalars['Int']['input']>;
  inventorySource?: InputMaybe<Scalars['String']['input']>;
  orderDate?: InputMaybe<Scalars['String']['input']>;
  orderId?: InputMaybe<Scalars['Int']['input']>;
  shipment_date?: InputMaybe<Scalars['String']['input']>;
  shippingTo?: InputMaybe<Scalars['String']['input']>;
  totalQty?: InputMaybe<Scalars['Int']['input']>;
};

export type FilterShipmentItemInput = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderItemId?: InputMaybe<Scalars['Int']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  qty?: InputMaybe<Scalars['Int']['input']>;
  shipmentId: Scalars['ID']['input'];
  sku?: InputMaybe<Scalars['String']['input']>;
  weight?: InputMaybe<Scalars['Float']['input']>;
};

export type FilterSiteMapInput = {
  fileName?: InputMaybe<Scalars['String']['input']>;
  path?: InputMaybe<Scalars['String']['input']>;
};

export type FilterSubscriberInput = {
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  isSubscribed?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FilterTaxCategoryInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type FilterTaxRateInput = {
  country?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  identifier?: InputMaybe<Scalars['String']['input']>;
  isZip?: InputMaybe<Scalars['Int']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  taxRate?: InputMaybe<Scalars['Float']['input']>;
  zipCode?: InputMaybe<Scalars['String']['input']>;
  zipFrom?: InputMaybe<Scalars['String']['input']>;
  zipTo?: InputMaybe<Scalars['String']['input']>;
};

export type FilterThemesInput = {
  id?: InputMaybe<Scalars['ID']['input']>;
};

export type FilterTransactionInput = {
  id?: InputMaybe<Scalars['Int']['input']>;
  invoiceId?: InputMaybe<Scalars['Int']['input']>;
  orderId?: InputMaybe<Scalars['Int']['input']>;
  paymentMethod?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  transactionId?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type FilterUrlRewriteInput = {
  entityType?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  locale?: InputMaybe<Scalars['String']['input']>;
  redirectType?: InputMaybe<Scalars['Int']['input']>;
  requestPath?: InputMaybe<Scalars['String']['input']>;
  targetPath?: InputMaybe<Scalars['String']['input']>;
};

export type FilterUserInput = {
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
  roleId?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
};

export type FilterWislistInput = {
  channelId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  productId?: InputMaybe<Scalars['Int']['input']>;
  productName?: InputMaybe<Scalars['String']['input']>;
};

export enum Gender {
  FEMALE = 'FEMALE',
  MALE = 'MALE',
  OTHER = 'OTHER'
}

export type GroupedProductInput = {
  productId: Scalars['Int']['input'];
  quantity: Scalars['Int']['input'];
};

export type InventoriesInput = {
  inventorySourceId: Scalars['ID']['input'];
  qty: Scalars['Int']['input'];
};

export type InvoiceDataInput = {
  orderItemId: Scalars['Int']['input'];
  quantity: Scalars['Int']['input'];
};

export type LoginInput = {
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
  remember?: InputMaybe<Scalars['Boolean']['input']>;
};

export type OptionInput = {
  adminName: Scalars['String']['input'];
  isDelete?: InputMaybe<Scalars['String']['input']>;
  isNew?: InputMaybe<Scalars['String']['input']>;
  position?: InputMaybe<Scalars['String']['input']>;
  swatchValue?: InputMaybe<Scalars['String']['input']>;
  translations?: InputMaybe<Array<InputMaybe<OptionTranslationInput>>>;
};

export type OptionInputTheme = {
  filtersInput?: InputMaybe<Array<InputMaybe<FilterInput>>>;
  title: Scalars['String']['input'];
};

export type OptionTranslationInput = {
  code: Scalars['String']['input'];
  label: Scalars['String']['input'];
};

/** Allows ordering a list of records. */
export type OrderByClause = {
  /** The column that is used for ordering. */
  column: Scalars['String']['input'];
  /** The direction that is used for ordering. */
  order: SortOrder;
};

/** Aggregate functions when ordering by a relation without specifying a column. */
export enum OrderByRelationAggregateFunction {
  /** Amount of items. */
  COUNT = 'COUNT'
}

/** Aggregate functions when ordering by a relation that may specify a column. */
export enum OrderByRelationWithColumnAggregateFunction {
  /** Average. */
  AVG = 'AVG',
  /** Amount of items. */
  COUNT = 'COUNT',
  /** Maximum. */
  MAX = 'MAX',
  /** Minimum. */
  MIN = 'MIN',
  /** Sum. */
  SUM = 'SUM'
}

export type OrderInvoiceInput = {
  baseGrandTotal?: InputMaybe<Scalars['Float']['input']>;
  grandTotal?: InputMaybe<Scalars['Float']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  invoiceDate?: InputMaybe<Scalars['String']['input']>;
  orderId?: InputMaybe<Scalars['Int']['input']>;
  totalQty?: InputMaybe<Scalars['Int']['input']>;
};

export type OrderRefundInput = {
  adjustmentFee?: InputMaybe<Scalars['Float']['input']>;
  adjustmentRefund?: InputMaybe<Scalars['Float']['input']>;
  baseGrandTotal?: InputMaybe<Scalars['Float']['input']>;
  discountAmount?: InputMaybe<Scalars['Float']['input']>;
  grandTotal?: InputMaybe<Scalars['Float']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  orderId?: InputMaybe<Scalars['Int']['input']>;
  refundDate?: InputMaybe<Scalars['String']['input']>;
  shippingAmount?: InputMaybe<Scalars['Float']['input']>;
  taxAmount?: InputMaybe<Scalars['Float']['input']>;
  totalQty?: InputMaybe<Scalars['Int']['input']>;
};

export type OrderShipmentInput = {
  carrierTitle?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  orderId?: InputMaybe<Scalars['Int']['input']>;
  shipmentDate?: InputMaybe<Scalars['String']['input']>;
  trackNumber?: InputMaybe<Scalars['String']['input']>;
};

export type PaymentMethodsInput = {
  shippingMethod: Scalars['String']['input'];
};

export type PaypalIpnInput = {
  invoice: Scalars['ID']['input'];
  testIpn: Scalars['Int']['input'];
};

export enum PermissionType {
  ALL = 'ALL',
  CUSTOM = 'CUSTOM'
}

export type RefundDataInput = {
  orderItemId: Scalars['Int']['input'];
  quantity: Scalars['Int']['input'];
};

export enum ReviewStatus {
  APPROVED = 'APPROVED',
  DISAPPROVED = 'DISAPPROVED',
  PENDING = 'PENDING'
}

export type SaveShippingAddressInput = {
  billing?: InputMaybe<CheckoutAddressInput>;
  shipping?: InputMaybe<CheckoutAddressInput>;
};

export type SearchSynonymInput = {
  name: Scalars['String']['input'];
  terms: Scalars['String']['input'];
};

export type ShipmentDataInput = {
  orderItemId: Scalars['Int']['input'];
  quantity: Scalars['Int']['input'];
};

export type SignUpInput = {
  email: Scalars['String']['input'];
  firstName: Scalars['String']['input'];
  lastName: Scalars['String']['input'];
  password: Scalars['String']['input'];
  passwordConfirmation: Scalars['String']['input'];
  subscribedToNewsLetter?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SocialSignInInput = {
  email: Scalars['String']['input'];
  firstName?: InputMaybe<Scalars['String']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
  passwordConfirmation?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  remember?: InputMaybe<Scalars['Boolean']['input']>;
  signupType: SocialSignInType;
};

export enum SocialSignInType {
  FACEBOOK = 'FACEBOOK',
  GITHUB = 'GITHUB',
  GOOGLE = 'GOOGLE',
  LINKEDIN = 'LINKEDIN',
  TRUECALLER = 'TRUECALLER',
  TWITTER = 'TWITTER'
}

/** Directions for ordering a list of records. */
export enum SortOrder {
  /** Sort records in ascending order. */
  ASC = 'ASC',
  /** Sort records in descending order. */
  DESC = 'DESC'
}

export enum Status {
  ACTIVE = 'ACTIVE',
  DRAFT = 'DRAFT',
  INACTIVE = 'INACTIVE'
}

export type StoreAddressInput = {
  billing?: InputMaybe<CheckoutAddressInput>;
  shipping?: InputMaybe<CheckoutAddressInput>;
};

export type SuperAttributesInput = {
  attributeCode: Scalars['String']['input'];
  values?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export enum ThemeType {
  CategoryCarousel = 'CategoryCarousel',
  FooterLinks = 'FooterLinks',
  ImageCarousel = 'ImageCarousel',
  ProductCarousel = 'ProductCarousel',
  ServicesContent = 'ServicesContent',
  StaticContent = 'StaticContent'
}

/** Specify if you want to include or exclude trashed results from a query. */
export enum Trashed {
  /** Only return trashed results. */
  ONLY = 'ONLY',
  /** Return both trashed and non-trashed results. */
  WITH = 'WITH',
  /** Only return non-trashed results. */
  WITHOUT = 'WITHOUT'
}

export type UpdateAccountInput = {
  currentPassword?: InputMaybe<Scalars['String']['input']>;
  dateOfBirth?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
  firstName: Scalars['String']['input'];
  gender: Gender;
  image?: InputMaybe<Scalars['Upload']['input']>;
  imageUrl?: InputMaybe<Scalars['String']['input']>;
  lastName: Scalars['String']['input'];
  newPassword?: InputMaybe<Scalars['String']['input']>;
  newPasswordConfirmation?: InputMaybe<Scalars['String']['input']>;
  newsletterSubscriber?: InputMaybe<Scalars['Boolean']['input']>;
  phone: Scalars['String']['input'];
  uploadType?: InputMaybe<UploadType>;
};

export type UpdateBundleOptionsInput = {
  bundleOptionId?: InputMaybe<Scalars['ID']['input']>;
  isRequired: Scalars['Boolean']['input'];
  locales?: InputMaybe<Array<BundleOptionLocaleInput>>;
  products?: InputMaybe<Array<BundleProductInput>>;
  sortOrder?: InputMaybe<Scalars['Int']['input']>;
  type: Scalars['String']['input'];
};

export type UpdateCartItemInput = {
  cartItemId: Scalars['ID']['input'];
  quantity: Scalars['Int']['input'];
};

export type UpdateCartRuleInput = {
  actionType: ActionType;
  actions?: InputMaybe<Scalars['String']['input']>;
  applyToShipping: Scalars['Boolean']['input'];
  autogeneratedCoupons?: InputMaybe<AutoGeneratedCouponInput>;
  channels?: InputMaybe<Array<Scalars['Int']['input']>>;
  conditionType: Scalars['Boolean']['input'];
  conditions?: InputMaybe<Array<InputMaybe<ConditionInput>>>;
  couponCode?: InputMaybe<Scalars['String']['input']>;
  couponType?: InputMaybe<Scalars['Int']['input']>;
  customerGroups?: InputMaybe<Array<Scalars['Int']['input']>>;
  description?: InputMaybe<Scalars['String']['input']>;
  discountAmount: Scalars['Float']['input'];
  discountQuantity: Scalars['Int']['input'];
  discountStep: Scalars['Int']['input'];
  endOtherRules: Scalars['Boolean']['input'];
  endsTill?: InputMaybe<Scalars['DateTime']['input']>;
  freeShipping: Scalars['Boolean']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  sortOrder: Scalars['Int']['input'];
  startsFrom?: InputMaybe<Scalars['DateTime']['input']>;
  status: Scalars['Boolean']['input'];
  timesUsed: Scalars['Int']['input'];
  usagePerCustomer: Scalars['Int']['input'];
  useAutoGeneration?: InputMaybe<Scalars['Boolean']['input']>;
  usesAttributeConditions: Scalars['Boolean']['input'];
  usesPerCoupon: Scalars['Int']['input'];
};

export type UpdateDownloadableLinksInput = {
  downloads: Scalars['Int']['input'];
  file?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  linkProductId?: InputMaybe<Scalars['ID']['input']>;
  locales?: InputMaybe<Array<DownloadableLocaleInput>>;
  price: Scalars['Float']['input'];
  sampleFile?: InputMaybe<Scalars['String']['input']>;
  sampleFileName?: InputMaybe<Scalars['String']['input']>;
  sampleType: Scalars['String']['input'];
  sampleUrl?: InputMaybe<Scalars['String']['input']>;
  sortOrder: Scalars['Int']['input'];
  type: Scalars['String']['input'];
  url?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateDownloadableSamplesInput = {
  file?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  locales?: InputMaybe<Array<DownloadableLocaleInput>>;
  sampleProductId?: InputMaybe<Scalars['ID']['input']>;
  sortOrder: Scalars['Int']['input'];
  type: Scalars['String']['input'];
  url?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateGroupedProductInput = {
  associatedProductId: Scalars['ID']['input'];
  groupProductId?: InputMaybe<Scalars['ID']['input']>;
  qty: Scalars['Int']['input'];
  sortOrder?: InputMaybe<Scalars['Int']['input']>;
};

export type UpdateItemToCartInput = {
  qty?: InputMaybe<Array<UpdateItemsQty>>;
};

export type UpdateItemsQty = {
  cartItemId: Scalars['ID']['input'];
  quantity: Scalars['Int']['input'];
};

export type UpdateProductInput = {
  bundleOptions?: InputMaybe<Array<UpdateBundleOptionsInput>>;
  categories?: InputMaybe<Array<Scalars['Int']['input']>>;
  channel: Scalars['String']['input'];
  channels?: InputMaybe<Array<Scalars['Int']['input']>>;
  color?: InputMaybe<Scalars['Int']['input']>;
  cost?: InputMaybe<Scalars['Float']['input']>;
  crossSells?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  customAttributes?: InputMaybe<Array<InputMaybe<CustomAttributeInput>>>;
  customerGroupPrices?: InputMaybe<Array<InputMaybe<CustomerGroupPriceInput>>>;
  defaultVariantId?: InputMaybe<Scalars['ID']['input']>;
  depth?: InputMaybe<Scalars['Float']['input']>;
  description: Scalars['String']['input'];
  downloadableLinks?: InputMaybe<Array<UpdateDownloadableLinksInput>>;
  downloadableSamples?: InputMaybe<Array<UpdateDownloadableSamplesInput>>;
  featured?: InputMaybe<Scalars['Boolean']['input']>;
  guestCheckout?: InputMaybe<Scalars['Boolean']['input']>;
  height?: InputMaybe<Scalars['Float']['input']>;
  images?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventories?: InputMaybe<Array<InventoriesInput>>;
  length?: InputMaybe<Scalars['Float']['input']>;
  links?: InputMaybe<Array<UpdateGroupedProductInput>>;
  locale: Scalars['String']['input'];
  metaDescription?: InputMaybe<Scalars['String']['input']>;
  metaKeywords?: InputMaybe<Scalars['String']['input']>;
  metaTitle?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  new?: InputMaybe<Scalars['Boolean']['input']>;
  price: Scalars['Float']['input'];
  productNumber?: InputMaybe<Scalars['String']['input']>;
  relatedProducts?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  shortDescription: Scalars['String']['input'];
  size?: InputMaybe<Scalars['Int']['input']>;
  sku: Scalars['String']['input'];
  specialPrice?: InputMaybe<Scalars['Float']['input']>;
  specialPriceFrom?: InputMaybe<Scalars['String']['input']>;
  specialPriceTo?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['Boolean']['input']>;
  taxCategoryId?: InputMaybe<Scalars['ID']['input']>;
  upSells?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  uploadType?: InputMaybe<UploadType>;
  urlKey: Scalars['String']['input'];
  variants?: InputMaybe<Array<UpdateVariantInput>>;
  videos?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  visibleIndividually?: InputMaybe<Scalars['Boolean']['input']>;
  weight: Scalars['Float']['input'];
  width?: InputMaybe<Scalars['Float']['input']>;
};

export type UpdateSearchTermInput = {
  channelID?: InputMaybe<Scalars['Int']['input']>;
  locale?: InputMaybe<Scalars['String']['input']>;
  redirectUrl?: InputMaybe<Scalars['String']['input']>;
  results?: InputMaybe<Scalars['Int']['input']>;
  term?: InputMaybe<Scalars['String']['input']>;
  uses?: InputMaybe<Scalars['Int']['input']>;
};

export type UpdateThemeInput = {
  channelId: Scalars['ID']['input'];
  name: Scalars['String']['input'];
  options: OptionInputTheme;
  sortOrder: Scalars['Int']['input'];
  status?: InputMaybe<Scalars['Boolean']['input']>;
  themeCode?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateVariantInput = {
  color?: InputMaybe<Scalars['Int']['input']>;
  images?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventories?: InputMaybe<Array<VariantInventoryInput>>;
  name: Scalars['String']['input'];
  price: Scalars['Float']['input'];
  size?: InputMaybe<Scalars['Int']['input']>;
  sku: Scalars['String']['input'];
  status: Scalars['Boolean']['input'];
  variantId: Scalars['ID']['input'];
  weight: Scalars['Float']['input'];
};

export enum UploadType {
  BASE64 = 'BASE64',
  FILE = 'FILE',
  PATH = 'PATH'
}

export type UrlRewriteInput = {
  entityType: Scalars['String']['input'];
  locale?: InputMaybe<Scalars['String']['input']>;
  redirectType: Scalars['Int']['input'];
  requestPath: Scalars['String']['input'];
  targetPath: Scalars['String']['input'];
};

export type VariantInventoryInput = {
  inventorySourceId: Scalars['ID']['input'];
  qty: Scalars['Int']['input'];
};

export type CreateInventorySourceInput = {
  city: Scalars['String']['input'];
  code: Scalars['String']['input'];
  contactEmail: Scalars['String']['input'];
  contactFax?: InputMaybe<Scalars['String']['input']>;
  contactName: Scalars['String']['input'];
  contactNumber: Scalars['String']['input'];
  country: Scalars['String']['input'];
  description?: InputMaybe<Scalars['String']['input']>;
  latitude?: InputMaybe<Scalars['String']['input']>;
  longitude?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  postcode: Scalars['String']['input'];
  priority?: InputMaybe<Scalars['Int']['input']>;
  state: Scalars['String']['input'];
  status?: InputMaybe<Scalars['Boolean']['input']>;
  street: Scalars['String']['input'];
};

export type CreateTaxCategoryInput = {
  code: Scalars['String']['input'];
  description: Scalars['String']['input'];
  name: Scalars['String']['input'];
  taxrates: Array<Scalars['Int']['input']>;
};

export type CreateTaxRateInput = {
  country: Scalars['String']['input'];
  identifier: Scalars['String']['input'];
  isZip?: InputMaybe<Scalars['String']['input']>;
  state: Scalars['String']['input'];
  taxRate: Scalars['Float']['input'];
  zipCode?: InputMaybe<Scalars['String']['input']>;
  zipFrom?: InputMaybe<Scalars['String']['input']>;
  zipTo?: InputMaybe<Scalars['String']['input']>;
};

export enum CurrencyPosition {
  LEFT = 'LEFT',
  LEFT_WITH_SPACE = 'LEFT_WITH_SPACE',
  RIGHT = 'RIGHT',
  RIGHT_WITH_SPACE = 'RIGHT_WITH_SPACE'
}

export type SavePaymentMethodInput = {
  method: Scalars['String']['input'];
};

export type SaveShippingMethodInput = {
  method: Scalars['String']['input'];
};

export type AddItemToCartMutationVariables = Exact<{
  productId: Scalars['ID']['input'];
  quantity: Scalars['Int']['input'];
}>;


export type AddItemToCartMutation = { addItemToCart?: { success?: boolean | null, cart?: { id: string, customerEmail?: string | null, customerFirstName?: string | null, customerLastName?: string | null, shippingMethod?: string | null, couponCode?: string | null, isGift: boolean, itemsCount?: number | null, itemsQty?: number | null, grandTotal?: number | null, subTotal?: number | null, items?: Array<{ id: string, name?: string | null, quantity: number, total: number }> | null } | null } | null };

export type CartDetailQueryVariables = Exact<{ [key: string]: never; }>;


export type CartDetailQuery = { cartDetail?: { id: string, customerEmail?: string | null, customerFirstName?: string | null, customerLastName?: string | null, shippingMethod?: string | null, couponCode?: string | null, isGift: boolean, itemsCount?: number | null, itemsQty?: number | null, grandTotal?: number | null, subTotal?: number | null, items?: Array<{ id: string, name?: string | null, quantity: number, total: number }> | null } | null };

export type ProductQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type ProductQuery = { product?: { id: string, sku: string, type: string, name?: string | null, description?: string | null, shortDescription?: string | null, parentId?: string | null, attributeFamilyId: string, createdAt?: any | null, updatedAt?: any | null, images?: Array<{ id: string, path?: string | null, type?: string | null } | null> | null } | null };

export type ProductsQueryVariables = Exact<{ [key: string]: never; }>;


export type ProductsQuery = { products: { paginatorInfo: { count: number, currentPage: number, lastPage: number, total: number }, data: Array<{ id: string, sku: string, type: string, name?: string | null, description?: string | null, shortDescription?: string | null, price?: number | null, parentId?: string | null, attributeFamilyId: string, createdAt?: any | null, updatedAt?: any | null, images?: Array<{ id: string, path?: string | null, type?: string | null } | null> | null }> } };


export const AddItemToCartDocument = gql`
    mutation addItemToCart($productId: ID!, $quantity: Int!) {
  addItemToCart(input: {productId: $productId, quantity: $quantity}) {
    success
    cart {
      id
      customerEmail
      customerFirstName
      customerLastName
      shippingMethod
      couponCode
      isGift
      itemsCount
      itemsQty
      grandTotal
      subTotal
      items {
        id
        name
        quantity
        total
      }
    }
  }
}
    `;
export const CartDetailDocument = gql`
    query cartDetail {
  cartDetail {
    id
    customerEmail
    customerFirstName
    customerLastName
    shippingMethod
    couponCode
    isGift
    itemsCount
    itemsQty
    grandTotal
    subTotal
    items {
      id
      name
      quantity
      total
    }
  }
}
    `;
export const ProductDocument = gql`
    query product($id: ID!) {
  product(id: $id) {
    id
    sku
    type
    name
    description
    shortDescription
    images {
      id
      path
      type
    }
    parentId
    attributeFamilyId
    createdAt
    updatedAt
  }
}
    `;
export const ProductsDocument = gql`
    query products {
  products {
    paginatorInfo {
      count
      currentPage
      lastPage
      total
    }
    data {
      id
      sku
      type
      name
      description
      shortDescription
      price
      images {
        id
        path
        type
      }
      parentId
      attributeFamilyId
      createdAt
      updatedAt
    }
  }
}
    `;

export type SdkFunctionWrapper = <T>(action: (requestHeaders?:Record<string, string>) => Promise<T>, operationName: string, operationType?: string, variables?: any) => Promise<T>;


const defaultWrapper: SdkFunctionWrapper = (action, _operationName, _operationType, _variables) => action();

export function getSdk(client: GraphQLClient, withWrapper: SdkFunctionWrapper = defaultWrapper) {
  return {
    addItemToCart(variables: AddItemToCartMutationVariables, requestHeaders?: GraphQLClientRequestHeaders): Promise<AddItemToCartMutation> {
      return withWrapper((wrappedRequestHeaders) => client.request<AddItemToCartMutation>(AddItemToCartDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'addItemToCart', 'mutation', variables);
    },
    cartDetail(variables?: CartDetailQueryVariables, requestHeaders?: GraphQLClientRequestHeaders): Promise<CartDetailQuery> {
      return withWrapper((wrappedRequestHeaders) => client.request<CartDetailQuery>(CartDetailDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'cartDetail', 'query', variables);
    },
    product(variables: ProductQueryVariables, requestHeaders?: GraphQLClientRequestHeaders): Promise<ProductQuery> {
      return withWrapper((wrappedRequestHeaders) => client.request<ProductQuery>(ProductDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'product', 'query', variables);
    },
    products(variables?: ProductsQueryVariables, requestHeaders?: GraphQLClientRequestHeaders): Promise<ProductsQuery> {
      return withWrapper((wrappedRequestHeaders) => client.request<ProductsQuery>(ProductsDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'products', 'query', variables);
    }
  };
}
export type Sdk = ReturnType<typeof getSdk>;